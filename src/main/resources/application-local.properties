#spring.datasource.url=jdbc:postgresql://localhost:5432/ratingservice?useUnicode=yes&characterEncoding=UTF-8&useLegacyDatetimeCode=false&serverTimezone=Europe/Athens
#spring.datasource.username=postgres
#spring.datasource.password=12345
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#spring.jpa.hibernate.ddl-auto=update

# = DATA SOURCE
# ===============================
# Database Connection Info
spring.datasource.url = jdbc:h2:~/rating_service
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
# Populate the database using 'schema.sql' and 'data.sql'.
spring.datasource.initialization-mode = NEVER

# ===============================
# = H2
# ===============================
spring.h2.console.enabled=true

# ===============================
# = JPA / Hibernate
# ===============================
# Whether to enable logging of SQL statements.
spring.jpa.show-sql = true
# Whether to initialize the schema on startup.
spring.jpa.generate-ddl = true
# DDL mode, if set to `create` or `create-drop` it will also execute the import.sql from `/resources`
spring.jpa.hibernate.ddl-auto = create-drop
# Pretty print each sql query
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

logging.file.path=./logs
logging.file.name=${logging.file.path}/rating-service.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.max-history=30
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
logging.level.root=INFO
logging.level.org.hibernate=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=INFO